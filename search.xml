<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[JQueryDOM操作]]></title>
    <url>%2F2017%2F12%2F19%2FJQueryDOM%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[查找节点 查找属性节点：通过JQuery选择器完成.查找属性节点：查找到所需要的元素之后，可以调用JQuery对象的attr()方法来获取它的各种属性值.操作文本节点: 通过text().123$("p").text("Ethan");$("p").attr("user", "1779956562")alert($("p").attr("user")); 创建节点插入节点]]></content>
  </entry>
  <entry>
    <title><![CDATA[JQuery选择器：我的JQuery兄弟.]]></title>
    <url>%2F2017%2F12%2F19%2FJQuery%E9%80%89%E6%8B%A9%E5%99%A8%EF%BC%9A%E6%88%91%E7%9A%84JQuery%E5%85%84%E5%BC%9F%2F</url>
    <content type="text"><![CDATA[#我的JQuery兄弟 由JQuery对象转为DOM对象 获取一个JQuery对象 1var $btn = $("button"); JQuery对象是一个数组 1alert($btn.length); JQuery对象可以通过数组下标获取DOM对象 1alert($btn[0].firstChild.nodeValue); 由DOM对象转为JQuery对象 text()也可以修改文本节点内容.12// 使用$()包裹DOM对象alert($(btn).text()); //等价于: btn.firstChild.nodeValue; 基本选择器 ID选择器 # 1$("#btn"); class选择器 [ . ] 1$(".btn"); 标签选择器 button 1$("button"); 全部选择 [ * ] 1$("*"); 多选，并列选择器 , 1$(".btn,button,#btn"); ##层次选择器 选取ancestor的所有descendant(后代)元素 后代元素：包括子元素的子元素。。。 1$("ancestor descendant"); 选取ancestor的所有descendant(子)元素 子元素：只包括他下面的元素。。。 1$("ancestor&gt;descendant"); 选取ancestor的下一个descendant元素 以下选择器仅在descendant和ancestor相邻的才有效. 1$("ancestor+descendant"); 选取ancestor后面的所有descendant元素 1$("ancestor~descendant"); 选取ancestor所有兄弟descendant元素 1$("ancestor").sibling("descendant"); 选取不相邻ancestor的下一个兄弟descendant元素 first代表的是第一个元素 1$("ancestor").nextAll("descendant:first"); 选取ancestor前面的所有兄弟descendant元素 1$("ancestor").prevAll("descendant"); 基本过滤选择器 过滤选择器主要是通过特定的过滤规则来筛选出所需的DOM元素，该选择器都以“:”开头. 按照不同的过滤规则，过滤选择器可以分为基本过滤，内容过滤，可见性过滤，属性过滤，子元素过滤和表单对象属性过滤选择器.选择器|描述|返回——|————|——–:first|选取第一个元素|单个元素组成的集合:last|选取最后一个元素|集合元素:not(selector)|去除所有与给定选择器匹配的元素|集合元素:even|选取索引时偶数的所有元素，索引从0开始|集合元素:odd|选取索引时奇数的所有元素，索引从0开始|集合元素:eq(index)|选取索引大于等于index的元素，索引从0开始|集合元素:gt(index)|选取索引大于index的元素，索引从0开始|集合元素:lt(index)|选取索引小于index的元素，索引从0开始|集合元素:header|选取所有的标题元素，如：h1，h2等|集合元素:animated|选取当前正在执行动画的所有元素|集合元素 123456789101112131415161718192021222324252627282930313233$("#btn1").click(function () &#123; $("div:first").css("background", "orange");&#125;)$("#btn2").click(function () &#123; $("div:last").css("background", "orange");&#125;)$("#btn3").click(function () &#123; $("div:not(.one)").css("background", "orange");&#125;)$("#btn4").click(function () &#123; $("div:even").css("background", "orange");&#125;)$("#btn5").click(function () &#123; $("div:odd").css("background", "orange");&#125;)$("#btn6").click(function () &#123; $("div:gt(3)").css("background", "orange");&#125;)$("#btn7").click(function () &#123; $("div:eq(3)").css("background", "orange");&#125;)$("#btn8").click(function () &#123; $("div:lt(3)").css("background", "orange");&#125;)$("#btn9").click(function () &#123; $(":header").css("background", "orange");&#125;)$("#btn10").click(function () &#123; $(":animated").css("background", "orange");&#125;)$("#btn11").click(function () &#123; $("#two").nextAll("span:first").css("background", "orange");&#125;) 内容过滤选择器 内容过滤选择器的过滤规则主要体现在他所包含的子元素和文本内容上选择器|描述|返回 ——|—-|—-:contains(text)|选取含有文本内容为text的元素|集合元素:empty|选取不包含子元素或者文本的空元素|集合元素:has(selector)|选取含有某个选择器的元素|集合元素:parent|选取含有子元素或文本的元素|集合元素 可见性过滤选择器 可见性过滤选择器是根据元素的可见和不可见状态来选择相应的元素可见选择器：hidden不仅包含样式属性display为none的元素，也包括文本隐藏域()和visible:hidden之类的元素.选择器|描述|返回——|—-|—-:hidden|选取所有不可见的元素|集合元素:visible|选取所有可见的元素|集合元素 属性过滤选择器属性过滤选择器的过滤规则是通过元素的属性来获取相应的元素.选择器|描述|返回——|—-|—-]]></content>
  </entry>
  <entry>
    <title><![CDATA[使用GitHub Page建立博客]]></title>
    <url>%2F2017%2F12%2F19%2F%E4%BD%BF%E7%94%A8GitHub-Page%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[[TOC] 安装HexoHexo目录结构_config.yml _config.yml配置教程 网站的配置信息，可以在此配置大部分的参数.package.json 应用程序的信息。EJS,Stylus和Markdown renderer以默认安装，可以自由移除.scaffolds 模版 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。 Hexo的模板是指在新建的markdown文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。source 资源文件夹是存放用户资源的地方。除 posts 文件夹之外，开头命名为 (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。themes 主题文件夹。Hexo会根据主题来生成静态页面. Hexo使用开启服务器 hexo server localhost:4000 访问 NexT主题使用切换主题 修改配置文件theme.设置菜单 文章编写编写提交一个文章 hexo new post “title” 去本地目录编写md代码. hexo g hexo d hexo deploy]]></content>
  </entry>
</search>
